gsap.config({
    nullTargetWarn: !1
});
var M = {
    data: null,
    init: function() {
        M.loadData()
    },
    loadData: function() {
        var a = new XMLHttpRequest;
        a.onreadystatechange = function() {
            if (200 === a.status && 4 === a.readyState) {
                var d = JSON.parse(a.responseText);
                M.data = d
            }
        }
        ;
        a.open("post", "./data.json");
        a.send()
    }
}
  , V = {
    hero: null,
    projects: null,
    main: null,
    init: function() {
        V.loader()
    },
    loader: function() {
        CustomEase.create("easeOutExpo", C.easeOutExpo);
        CustomEase.create("easeInExpo", C.easeInExpo);
        var a = {
            value: 0
        };
        gsap.timeline({}).to(".loader-line", {
            x: 0,
            y: 0,
            z: 0,
            ease: "easeOutExpo",
            duration: 2,
            stagger: {
                each: 0.01
            }
        }).to(a, {
            value: 100,
            duration: 0.1,
            roundProps: {
                value: 1
            },
            onUpdate: function() {
                document.querySelector(".loader-counter").innerHTML = a.value
            },
            onComplete: function() {
                C.init()
            }
        }).to(".loader", {
            opacity: 0,
            ease: "easeOutExpo",
            onComplete: function() {
                document.querySelector(".loader").remove()
            }
        }).to([".logo", ".availability"], {
            opacity: 1,
            ease: "easeInExpo"
        }).to(".hero-line", {
            x: 0,
            y: 0,
            z: 0,
            ease: "easeOutExpo",
            duration: 1,
            stagger: {
                each: 0.1
            }
        })
    },
    // animateProject: function() {
    //     CustomEase.create("easeOutExpo", C.easeOutExpo);
    //     CustomEase.create("easeInExpo", C.easeInExpo);
    //     var a = gsap.timeline({});
    //     a.to([V.hero, V.projects, ".footer"], {
    //         ease: "easeOutExpo",
    //         opacity: 0,
    //         onStart: function() {
    //             C.locomotive.stop()
    //         },
    //         onComplete: function() {
    //             C.locomotive.scrollTo("top", 0, 0, [.87, 0, .13, 1], !0, function() {});
    //             V.hero.style.display = "none";
    //             V.projects.style.display = "none";
    //             d.style.display = "block"
    //         }
    //     }).to(".hero-line", 0, {
    //         x: 0,
    //         y: 20,
    //         z: 0,
    //         onComplete: function() {
    //             C.locomotive.start()
    //         }
    //     }).to([".close", ".footer"], {
    //         ease: "easeInExpo",
    //         opacity: 1
    //     })
    // },
}
  , C = {
    locomotive: null,
    links: null,
    easeInOutExpo: "0.87, 0, 0.13, 1",
    easeOutExpo: "0.16, 1, 0.3, 1",
    easeInExpo: "0.7, 0, 0.84, 0",
    top: null,
    template: null,
    init: function() {
        C.initLocomotive();
        C.handlerProjects();
    },
    initLocomotive: function() {
        gsap.registerPlugin(ScrollTrigger);
        C.locomotive = new LocomotiveScroll({
            el: document.querySelector("[data-scroll-container]"),
            smooth: !0,
            smoothMobile: !0
        });
        C.initGSAP();
        C.returnTop()
    },
    initGSAP: function() {
        C.locomotive.on("scroll", ScrollTrigger.update);
        ScrollTrigger.scrollerProxy(".smooth-scroll", {
            scrollTop: function(a) {
                return arguments.length ? C.locomotive.scrollTo(a, 0, 0) : C.locomotive.scroll.instance.scroll.y
            },
            getBoundingClientRect: function() {
                return {
                    top: 0,
                    left: 0,
                    width: window.innerWidth,
                    height: window.innerHeight
                }
            },
            pinType: document.querySelector(".smooth-scroll").style.transform ? "transform" : "fixed"
        });
        ScrollTrigger.addEventListener("refresh", function() {
            return C.locomotive.update()
        });
        ScrollTrigger.refresh();
        ScrollTrigger.defaults({
            scroller: ".smooth-scroll"
        })
    },
    linksHandler: function() {
        C.links = document.querySelectorAll(".link-content");
        C.links.forEach(function(a) {
            a.addEventListener("mouseenter", V.initLinkAnimation);
            a.addEventListener("mouseout", V.endLinkAnimation)
        })
    },
    returnTop: function() {
        C.top = document.querySelector(".return-top");
        C.top.addEventListener("click", function() {
            C.locomotive.scrollTo("top", 0, 2200, [.87, 0, .13, 1], !0, function() {})
        })
    },
}
  , App = {
    init: function() {
        M.init();
        V.init()
    }
};
window.addEventListener("load", function() {
    App.init()
});
